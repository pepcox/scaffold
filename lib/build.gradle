apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'net.ltgt.errorprone'
// discover dependency current versions ./gradlew dependencyUpdates -Drevision=release
apply plugin: 'com.github.ben-manes.versions'

apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/android.gradle")

androidExtensions {
    experimental = true
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin

    implementation deps.material
    api deps.recyclerview
    implementation deps.constraint_layout

    api deps.rxjava
    api deps.rxjava_android
    api deps.rxjava_kotlin
    api deps.timber
    api deps.three_ten

    implementation deps.rxbind_material
    implementation deps.rxbind_appcompat
    implementation deps.rxbind_swiperefresh

    api deps.lifecycle_ext
    api deps.navigation_fragment
    api deps.navigation_ui

    api deps.dagger
    api deps.dagger_android
    api deps.autodagger

    implementation deps.okio
    implementation deps.telescope

    kapt deps.dagger_compiler
    kapt deps.autodagger_compiler
    compileOnly deps.javax_annotations

    testImplementation deps.junit

    androidTestImplementation(deps.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}